AWSTemplateFormatVersion: '2010-09-09'
Description: raisetech work.
Resources:
  # myVPC:                                    #VPC作成
  #   Type: AWS::EC2::VPC
  #   Properties:
  #     CidrBlock: 10.0.0.0/16
  #     Tags:
  #     - Key: Name
  #       Value: raisetech-vpc-2
  # myInternetGateway:                         #インターネットゲートウェイ作成
  #   Type: AWS::EC2::InternetGateway
  #   Properties:
  #     Tags:
  #     - Key: Name
  #       Value: raisetech-igw
  # AttachGateway:                              #VPCとインターネットゲートウェイをアタッチ
  #   Type: AWS::EC2::VPCGatewayAttachment
  #   Properties:
  #       VpcId:
  #         Ref: myVPC
  #       InternetGatewayId:
  #         Ref: myInternetGateway
  # publicRouteTable:                            #ルートテーブル作成
  #   Type: AWS::EC2::RouteTable
  #   Properties:
  #     VpcId:  
  #       Ref: myVPC
  #     Tags:
  #     - Key: Name
  #       Value: public-route-table 
  # publicRoute:                                  #ルートテーブルのルートを指定(インターネットゲートウェイ用)
  #   Type: AWS::EC2::Route
  #   DependsOn: AttachGateway
  #   Properties:
  #      RouteTableId:
  #        Ref: publicRouteTable
  #      DestinationCidrBlock: 0.0.0.0/0
  #      GatewayId:
  #        Ref: myInternetGateway
  # publicsubnet1:                                #パブリックサブネット１作成(EC2置き場)
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId:
  #       Ref: vpc-dc9671ba
  #     CidrBlock: 172.31.64.0/20
  #     AvailabilityZone: "ap-northeast-1a"
  #     Tags:
  #     - Key: Name
  #       Value: main-public-subnet
  # myNetworkAcl:                                   #ネットワークACL作成
  #     Type: AWS::EC2::NetworkAcl
  #     Properties:
  #        VpcId:
  #          Ref: myVPC
  #        Tags:
  #        - Key: Name
  #          Value: acl-01
  # InboundRule:                                    #ACLインバウンド作成
  #   Type: AWS::EC2::NetworkAclEntry
  #   Properties:
  #      NetworkAclId:
  #        Ref: myNetworkAcl
  #      RuleNumber: 100
  #      Protocol: -1
  #      RuleAction: allow
  #      CidrBlock: 0.0.0.0/0
  # OutboundRule:                                   #ACLアウトバウンド作成
  #   Type: AWS::EC2::NetworkAclEntry
  #   Properties:
  #      NetworkAclId:
  #        Ref: myNetworkAcl
  #      RuleNumber: 100
  #      Protocol: -1
  #      Egress: true
  #      RuleAction: allow
  #      CidrBlock: 0.0.0.0/0
  # mySubnetNetworkAclAssociation1:                  #パブリックサブネット1とネットワークACLの紐付
  #    Type: AWS::EC2::SubnetNetworkAclAssociation
  #    Properties:
  #      SubnetId:
  #        Ref: publicsubnet1
  #      NetworkAclId:
  #        Ref: myNetworkAcl
  # mySubnetRouteTableAssociation1:                  #パブリックサブネット1とルートテーブルの紐付
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     SubnetId:
  #       Ref: publicsubnet1
  #     RouteTableId:
  #       Ref: publicRouteTable
  InstanceSecurityGroup:                          #セキュリティグループ(EC2用)設定
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow http,SSH,3000 to client host"
      VpcId:
         Ref: vpc-dc9671ba
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

      - IpProtocol: tcp
        FromPort: 3000
        ToPort: 3000
        CidrIp: 0.0.0.0/0

      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: 0.0.0.0/0
      Tags: 
      - Key: "Name"
        Value: "EC2sg"
  WebInstance:                                  #EC2作成
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: "ap-northeast-1d"
      InstanceType: "t2.micro"
      ImageId: "ami-01748a72bed07727c"            #自分で作成したインスタンスのAMI ID
      KeyName: "my-key"
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet: 
          - !Ref InstanceSecurityGroup
        SubnetId: 
          !Ref subnet-222b8309
      Tags:
      - Key: "Name"
        Value: "jenkins_cfn_ec2"